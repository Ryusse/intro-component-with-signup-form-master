// ==============================================================================================================

// ======FONT====== //

//Poppins

@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");

// ==============================================================================================================

// ======VARIABLES====== //

//Colors

//Primary
$red: hsl(0, 100%, 74%);
$green: hsl(154, 59%, 51%);

//Accent
$blue: hsl(248, 32%, 49%);

//Neutral
$white: hsl(0, 4%, 100%);
$graish: rgba(255, 255, 255, 0.774);
$dark-blue: hsl(249, 10%, 26%);
$grayish-blue: hsl(246, 25%, 77%);

//Fonts
$poppins: "Poppins", sans-serif;

//Font Weight
$regular: 400;
$medium: 500;
$semi-bold: 600;
$bold: 700;


$breakpoints: (
  xs   :  25em, // 400px
  ms   :  34em, // 544px
  md   :  48em, // 768px
  lg   :  60em, // 960px
  lg-2 :  70em,
  xl   :  80em, // 1280px
  xxl  :  90em  // 1440px
);

$p-font-sizes: (
  null :  0.95rem,
  xs   :  0.95rem,
  ms   :  0.95rem,
  md   :  0.9rem,
  lg   :  0.9rem,
  lg-2 :  0.9rem,
  xl   :  0.95rem,
  xxl  :  0.95rem
);

$input-font-sizes: (
  null :  0.8rem,
  xs   :  0.8rem,
  ms   :  0.8rem,
  md   :  0.75rem,
  lg   :  0.75rem,
  lg-2 :  0.75rem,
  xl   :  0.80rem,
  xxl  :  0.80rem
);

$small-font-sizes: (
  null :  0.75rem,
  xs   :  0.75rem,
  ms   :  0.75rem,
  md   :  0.65rem,
  lg   :  0.65rem,
  lg-2 :  0.8rem,
  xl   :  0.8rem,
  xxl  :  0.8rem
);

$h1-font-sizes: (
  null :  1.8rem,
  xs   :  1.8rem,
  ms   :  1.8rem,
  md   :  1.7rem,
  lg   :  2rem,
  lg-2 :  2.5rem,
  xl   :  2.5rem,
  xxl  :  2.5rem
);


// ==============================================================================================================

// ======MIXINS====== //

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    }
    @else {
      // If $fs-font-size is a key that exists in $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}

@mixin query($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}



//Padding
@mixin padding-movile() {
  padding: 4rem 1.7rem 4rem 1.7rem;
}

@mixin padding-tablet() {
  padding: 8rem 10rem 8rem 10rem;
}

@mixin padding-desktop() {
  padding: 5rem 3rem 5rem 3rem;
}

@mixin padding-desktop-xxl() {
  padding: 3rem 7rem 3rem 7rem;
}

//margin
@mixin margin($top: 0, $left: 0, $bot: 0, $right: 0) {
  margin: $top $left $bot $right;
}

//transitions
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// ==============================================================================================================

// ======BASE====== //

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  outline: none;
  text-decoration: none;
}

html {
  scroll-behavior: smooth;
}

body {
  width: 100%;
}

input[type='submit']{
  display: none;
}

button {
  border: none;
  background-color: white;
}

ul {
  list-style: none;
  text-decoration: none;
  li {
    a {
      display: inline-block;
    }
  }
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

// ==============================================================================================================
